#!/bin/bash -e

dims() {
	if [ $# -gt "1" ]
	then
		echo "Error" 1>&2
		return 1
	elif [ $# = "1" ] && [ ! -r $1 ]
	then
		echo "Error, file is unreadable" 1>&2
		return 1
	else
		rows=$(wc -l $1)
		firstline=$(head -n 1 $1)
		cols=$(echo $firstline | wc -w ) # counts the number of words in the first line
		rows=$(echo $rows | cut -f 1 -d " ")  # cut cuts the first field (-f 1) from a list of fields delimited by the string " " (-d)
		printf "$rows $cols\n"
		return 0
	fi		 		
}

#ERROR WITH MATRICES WITH ONE COLUMN ONLY
transpose() { 
	firstline=$(head -n 1 $1)
	cols=$(echo $firstline | wc -w )
	rows=$(wc -l $1)
	rows=$(echo $rows | cut -f 1 -d " ")
	echo "number of rows: $rows"
	if [ $# -gt "1" ]
	then
		echo "Error" 1>&2
		return 1
	elif [ $# = "1" ] && [ ! -r $1 ]
	then
		echo "Error, file is unreadable" 1>&2
		return 1
	else
		for((i = 1; i <= $cols; i++))
		do
			eachcol=$(cut -d '	' -f $i $1)
			# printf $eachcol
			for j in $eachcol
			do
				if [ $j -eq $rows ]
				then
			 		printf "%d\n" $j
				else
					printf "%d\t" $j
				fi
			done
			printf "\n"
		done
		return 0
	fi
}

mean() {
	rows=$(wc -l $1)
	rows=$(echo $rows | cut -f 1 -d " ")  # cut cuts the first field (-f 1) from a list of fields delimited by the string " " (-d)
	firstline=$(head -n 1 $1)
	cols=$(echo $firstline | wc -w )
	
	if [ $# -gt "1" ]
	then
		echo "Error 1" 1>&2
		return 1
	elif [ $# = "1" ] && [ ! -r $1 ]
	then
		echo "Error, file is unreadable" 1>&2
		return 1
	else
		sum=0
		for((i = 1; i <= $cols; i++))
		do
			eachcol=$(cut -f $i $1)
			for((j = 1; j <= $rows; j++))
			do
				sum=$((sum + j))	
			done
			printf "$((sum))"
		done
		return 0
	fi
}

add() {
	
	echo "add"
}

multipy() {
	echo "multiply"
}


datafilepath="datafile$$"
if [ "$#" = "0" ]
then 
	echo "Error, no arguments were passed" 1>&2
	exit 1
elif [ $1 = "add" ] || [ $1 = "multiply" ]
then
	if [ $# = "3" ]
	then
		$1 $2 $3
	else
		echo "Error" 1>&2
		exit 1
	fi
elif [ $1 = "dims" ] || [ $1 = "transpose" ] || [ $1 = "mean" ]
then
	if [ $# = "2" ]
	then
		$1 $2
	elif [ $# = "1" ]
	then
		cat > "$datafilepath"
		$1 "$datafilepath"
	else
		echo "Error" 1>&2
		exit 1
	fi
else
	echo "Error, function does not exist: $1" 1>&2
	exit 1
fi	
